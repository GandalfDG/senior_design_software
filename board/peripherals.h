/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_clock.h"
#include "fsl_ftm.h"
#include "fsl_i2c.h"
#include "fsl_uart.h"
#include "fsl_gpio.h"
#include "fsl_port.h"
#include "fsl_rtc.h"
#include "fsl_adc16.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Definition of peripheral ID */
#define MOTOR_PWM_PERIPHERAL FTM0
/* Definition of the clock source frequency */
#define MOTOR_PWM_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* Motor_PWM interrupt vector ID (number). */
#define MOTOR_PWM_IRQN FTM0_IRQn
/* Motor_PWM interrupt handler identifier. */
#define MOTOR_PWM_IRQHANDLER FTM0_IRQHandler
/* Definition of peripheral ID */
#define SERVO_PWM_PERIPHERAL FTM2
/* Definition of the clock source frequency */
#define SERVO_PWM_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* Servo_PWM interrupt vector ID (number). */
#define SERVO_PWM_IRQN FTM2_IRQn
/* Servo_PWM interrupt handler identifier. */
#define SERVO_PWM_IRQHANDLER FTM2_IRQHandler
/* BOARD_InitPeripherals defines for I2C0 */
/* Definition of peripheral ID */
#define USER_I2C_PERIPHERAL I2C0
/* Definition of the clock source */
#define USER_I2C_CLOCK_SOURCE I2C0_CLK_SRC
/* Definition of the clock source frequency */
#define USER_I2C_CLK_FREQ CLOCK_GetFreq(USER_I2C_CLOCK_SOURCE)
/* Definition of peripheral ID */
#define UART_0_PERIPHERAL UART0
/* Definition of the clock source frequency */
#define UART_0_CLOCK_SOURCE CLOCK_GetFreq(UART0_CLK_SRC)
/* Alias for GPIOA peripheral */
#define GPIO_A_GPIO GPIOA
/* Alias for PORTA */
#define GPIO_A_PORT PORTA
/* GPIO_A interrupt vector ID (number). */
#define GPIO_A_IRQN PORTA_IRQn
/* GPIO_A interrupt handler identifier. */
#define GPIO_A_IRQHANDLER PORTA_IRQHandler
/* Alias for GPIOC peripheral */
#define GPIO_C_GPIO GPIOC
/* Alias for PORTC */
#define GPIO_C_PORT PORTC
/* GPIO_C interrupt vector ID (number). */
#define GPIO_C_IRQN PORTC_IRQn
/* GPIO_C interrupt handler identifier. */
#define GPIO_C_IRQHANDLER PORTC_IRQHandler
/* Definition of peripheral ID */
#define RTC_1_PERIPHERAL RTC
/* Alias for ADC0 peripheral */
#define CAMERA_ADC_PERIPHERAL ADC0
/* Camera_ADC interrupt vector ID (number). */
#define CAMERA_ADC_IRQN ADC0_IRQn
/* Camera_ADC interrupt handler identifier. */
#define CAMERA_ADC_IRQHANDLER ADC0_IRQHandler
/* Definition of peripheral ID */
#define FTM_1_PERIPHERAL FTM3
/* Definition of the clock source frequency */
#define FTM_1_CLOCK_SOURCE CLOCK_GetFreq(kCLOCK_BusClk)
/* FTM_1 interrupt vector ID (number). */
#define FTM_1_IRQN FTM3_IRQn
/* FTM_1 interrupt handler identifier. */
#define FTM_1_IRQHANDLER FTM3_IRQHandler
/* Alias for GPIOD peripheral */
#define GPIO_D_GPIO GPIOD
/* Alias for PORTD */
#define GPIO_D_PORT PORTD
/* GPIO_D interrupt vector ID (number). */
#define GPIO_D_IRQN PORTD_IRQn
/* GPIO_D interrupt handler identifier. */
#define GPIO_D_IRQHANDLER PORTD_IRQHandler

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const ftm_config_t Motor_PWM_config;
extern const ftm_config_t Servo_PWM_config;
extern const i2c_master_config_t User_I2C_config;
extern const uart_config_t UART_0_config;
extern const rtc_config_t RTC_1_config;
extern adc16_channel_config_t Camera_ADC_channelsConfig[1];
extern const adc16_config_t Camera_ADC_config;
extern const adc16_channel_mux_mode_t Camera_ADC_muxMode;
extern const adc16_hardware_average_mode_t Camera_ADC_hardwareAverageMode;
extern const ftm_config_t FTM_1_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
